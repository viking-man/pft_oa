<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oa.user.role.dao.RoleDao">
    <resultMap id="BaseResultMap" type="oa.user.role.entity.RoleEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="rowstamp" jdbcType="BIGINT" property="rowstamp"/>
        <result column="createuser" jdbcType="BIGINT" property="createuser"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="modifyuser" jdbcType="BIGINT" property="modifyuser"/>
        <result column="modifytime" jdbcType="TIMESTAMP" property="modifytime"/>
        <result column="rolecode" jdbcType="VARCHAR" property="rolecode"/>
        <result column="rolename" jdbcType="VARCHAR" property="rolename"/>
        <result column="rolealias" jdbcType="VARCHAR" property="rolealias"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="fixed" jdbcType="TINYINT" property="fixed"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, rowstamp, createuser, createtime, modifyuser, modifytime, rolecode, rolename, 
    rolealias, remark, fixed
  </sql>
    <select id="select" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bs_role
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByRolecode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bs_role
        where rolecode = #{rolecode,jdbcType=VARCHAR}
    </select>

    <select id="selectByUserid" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        *
        from bs_role a
        join bs_userrole b on a.id = b.roleid
        where b.userid = #{userid,jdbcType=BIGINT}
    </select>

    <select id="queryAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bs_role;
    </select>

    <delete id="delete" parameterType="java.lang.Long">
    delete from bs_role
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="oa.user.role.entity.RoleEntity">
    insert into bs_role (id, rowstamp, createuser, 
      createtime, modifyuser, modifytime, 
      rolecode, rolename, rolealias, 
      remark, fixed)
    values (#{id,jdbcType=BIGINT}, #{rowstamp,jdbcType=BIGINT}, #{createuser,jdbcType=BIGINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{modifyuser,jdbcType=BIGINT}, #{modifytime,jdbcType=TIMESTAMP}, 
      #{rolecode,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, #{rolealias,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{fixed,jdbcType=TINYINT})
  </insert>

    <update id="update" parameterType="oa.user.role.entity.RoleEntity">
        update bs_role
        <set>
            <if test="rowstamp != null">
                rowstamp = #{rowstamp,jdbcType=BIGINT},
            </if>
            <if test="createuser != null">
                createuser = #{createuser,jdbcType=BIGINT},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyuser != null">
                modifyuser = #{modifyuser,jdbcType=BIGINT},
            </if>
            <if test="modifytime != null">
                modifytime = #{modifytime,jdbcType=TIMESTAMP},
            </if>
            <if test="rolecode != null">
                rolecode = #{rolecode,jdbcType=VARCHAR},
            </if>
            <if test="rolename != null">
                rolename = #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="rolealias != null">
                rolealias = #{rolealias,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="fixed != null">
                fixed = #{fixed,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>